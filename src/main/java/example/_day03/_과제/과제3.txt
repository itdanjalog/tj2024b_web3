JPA 연관관계 과제3 : 과정(Course)과 수강생(Student) 정보를 관리하는 시스템을 구현
[엔티티 설계]
Course (과정)
cno (int, 기본 키, 자동 생성)
cname (String, 과정명, 필수)
description (String, 과정 설명)
students (List<Student>, 수강생 목록, 양방향 관계)
BaseTimeEntity 상속 (생성일시, 수정일시 자동 관리)

Student (수강생)
sno (int, 기본 키, 자동 생성)
sname (String, 수강생 이름, 필수)
email (String, 이메일)
course (Course, 과정, 단방향 관계)
BaseTimeEntity 상속 (생성일시, 수정일시 자동 관리)

DTO 설계:
CourseDTO
cno (int)
cname (String)
description (String)
studentNames (List<String>, 수강생 이름 목록)
createdDate (LocalDateTime)
modifiedDate (LocalDateTime)

StudentDTO
sno (int)
sname (String)
email (String)
courseName (String, 과정 이름)
createdDate (LocalDateTime)
modifiedDate (LocalDateTime)

[기능 요구사항]:
과정 생성: 과정명과 설명을 입력받아 새로운 과정을 생성합니다.
과정 목록 조회: 모든 과정의 목록을 조회합니다. 각 과정의 이름, 설명, 수강생 이름 목록, 생성일시, 수정일시를 표시합니다.
과정 상세 조회: 특정 과정의 상세 정보를 조회합니다. 과정 이름, 설명, 수강생 이름 목록, 생성일시, 수정일시를 표시합니다.
수강생 등록: 과정 번호, 수강생 이름, 이메일을 입력받아 새로운 수강생을 등록합니다.
수강생 목록 조회: 특정 과정에 등록된 수강생 목록을 조회합니다. 수강생 이름, 이메일, 생성일시, 수정일시를 표시합니다.

BaseTimeEntity 클래스를 생성하여 생성일시와 수정일시를 자동으로 관리합니다.
Course 및 Student 엔티티를 생성하고, 필요한 어노테이션을 사용하여 데이터베이스 테이블과 매핑합니다.
CourseDTO 및 StudentDTO를 생성하고, 엔티티와 DTO 간의 변환을 위한 toEntity() 및 toDto() 메서드를 구현합니다.
CourseRepository 및 StudentRepository를 생성하고, 필요한 메서드를 구현합니다.
CourseService 및 StudentService를 생성하고, 비즈니스 로직을 구현합니다.
CourseController 및 StudentController를 생성하고, API 엔드포인트를 구현합니다.
AppStart 클래스를 생성하여 애플리케이션을 실행합니다.